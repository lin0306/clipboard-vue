name: Clipboard

on:
  push:
    tags:
      - 'v*'
      - 'v*-beta*'
      - 'v*-alpha*'
      - 'v*-rc*'
      - 'v*-ga*'

# 确保同一时间只运行一个工作流
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# 设置权限
permissions:
  contents: write

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
      # 确保一个任务失败不影响其他任务
      fail-fast: false

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.18.0
          cache: 'yarn'

      - name: Install Dependencies
        run: yarn install --frozen-lockfile
        
      - name: Build Electron App
        run: yarn build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_IDENTITY_AUTO_DISCOVERY: false  # 禁用自动发现代码签名证书
          
      - name: Debug List Directories (macOS)
        if: matrix.os == 'macos-latest'
        run: find release -type f -name "*.dmg" -o -name "*.zip" -o -name "*.yml" -o -name "*.yaml" | sort
        shell: bash
          
      - name: Debug List Directories (Windows)
        if: matrix.os == 'windows-latest'
        run: Get-ChildItem -Path release -Recurse -Include "*.exe","*.zip","*.yml","*.yaml" | Sort-Object FullName
        shell: pwsh
          
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-artifacts
          path: |
            release/**/*.exe
            release/**/*.dmg
            release/**/*.zip
            release/**/*.yml
            release/**/*.yaml
          if-no-files-found: error

      - name: Extract Tag Name
        id: extract_tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        shell: bash

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/**/*.exe
            release/**/*.dmg
            release/**/*.zip
            release/**/*.yml
            release/**/*.yaml
          draft: false
          name: ${{ env.TAG_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          prerelease: ${{ contains(github.ref, '-beta') || contains(github.ref, '-alpha') || contains(github.ref, '-rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}